module String exposing
    ( String
    , append, charAt, substring, length
    )

import Basics exposing (..)
import Option exposing (Option)


type String = InternalString

append : String -> String -> String
append = append

charAt : Int -> String -> Option Char
charAt = charAt

substring : Int -> Int -> String -> String
substring = substring

length : String -> Int
length = length

cmp : String -> String -> Ordering
cmp = cmp

impl String : Eq where
    a == b = case cmp a b of
        EQ -> true
        _ -> false

impl String : Ord where
    compare = cmp

impl String : ToString where
    toString = id

impl String : Appendable where
    (++) = append

impl String : Default where
   default = ""
